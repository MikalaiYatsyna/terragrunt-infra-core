name: Manage Terragrunt infra core stack

on:
  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: 'Action type to run'
        required: true
        options:
          - apply
          - destroy
permissions:
  id-token: write
  contents: read

jobs:
  manage_stack:
    name: ${{ github.event.inputs.action }} core infra stack
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        id: aws-login
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          output-credentials: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@main
        with:
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TG_TF_REGISTRY_TOKEN }}

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v3.0.2
        with:
          terragrunt-version: 0.43.2

      - name: ${{ github.event.inputs.action }} core infra stack
        run: terragrunt run-all ${{ github.event.inputs.action }} --terragrunt-non-interactive --terragrunt-ignore-dependency-errors --terragrunt-include-dir network/vpc
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TG_TF_REGISTRY_TOKEN: ${{ secrets.TG_TF_REGISTRY_TOKEN }}
          ROOT_DOMAIN: ${{ secrets.DOMAIN }}
          ECR_URL: ${{ secrets.ECR_URL }}
          EMAIL: ${{ secrets.EMAIL }}
          TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
